// Code generated by Prisma (prisma@1.30.5). DO NOT EDIT.
// Please don't change this file manually but run `prisma generate` to update it.
// For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

import { DocumentNode } from "graphql";
import {
  makePrismaClientClass,
  BaseClientOptions,
  Model
} from "prisma-client-lib";
import { typeDefs } from "./prisma-schema";

export type AtLeastOne<T, U = { [K in keyof T]: Pick<T, K> }> = Partial<T> &
  U[keyof U];

export interface Exists {
  estabelecimento: (where?: EstabelecimentoWhereInput) => Promise<boolean>;
}

export interface Node {}

export type FragmentableArray<T> = Promise<Array<T>> & Fragmentable;

export interface Fragmentable {
  $fragment<T>(fragment: string | DocumentNode): Promise<T>;
}

export interface Prisma {
  $exists: Exists;
  $graphql: <T = any>(
    query: string,
    variables?: { [key: string]: any }
  ) => Promise<T>;

  /**
   * Queries
   */

  estabelecimento: (
    where: EstabelecimentoWhereUniqueInput
  ) => EstabelecimentoPromise;
  estabelecimentoes: (args?: {
    where?: EstabelecimentoWhereInput;
    orderBy?: EstabelecimentoOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => FragmentableArray<Estabelecimento>;
  estabelecimentoesConnection: (args?: {
    where?: EstabelecimentoWhereInput;
    orderBy?: EstabelecimentoOrderByInput;
    skip?: Int;
    after?: String;
    before?: String;
    first?: Int;
    last?: Int;
  }) => EstabelecimentoConnectionPromise;
  node: (args: { id: ID_Output }) => Node;

  /**
   * Mutations
   */

  createEstabelecimento: (
    data: EstabelecimentoCreateInput
  ) => EstabelecimentoPromise;
  updateEstabelecimento: (args: {
    data: EstabelecimentoUpdateInput;
    where: EstabelecimentoWhereUniqueInput;
  }) => EstabelecimentoPromise;
  updateManyEstabelecimentoes: (args: {
    data: EstabelecimentoUpdateManyMutationInput;
    where?: EstabelecimentoWhereInput;
  }) => BatchPayloadPromise;
  upsertEstabelecimento: (args: {
    where: EstabelecimentoWhereUniqueInput;
    create: EstabelecimentoCreateInput;
    update: EstabelecimentoUpdateInput;
  }) => EstabelecimentoPromise;
  deleteEstabelecimento: (
    where: EstabelecimentoWhereUniqueInput
  ) => EstabelecimentoPromise;
  deleteManyEstabelecimentoes: (
    where?: EstabelecimentoWhereInput
  ) => BatchPayloadPromise;

  /**
   * Subscriptions
   */

  $subscribe: Subscription;
}

export interface Subscription {
  estabelecimento: (
    where?: EstabelecimentoSubscriptionWhereInput
  ) => EstabelecimentoSubscriptionPayloadSubscription;
}

export interface ClientConstructor<T> {
  new (options?: BaseClientOptions): T;
}

/**
 * Types
 */

export type EstabelecimentoOrderByInput =
  | "_id_ASC"
  | "_id_DESC"
  | "CO_UNIDADE_ASC"
  | "CO_UNIDADE_DESC"
  | "CO_CNES_ASC"
  | "CO_CNES_DESC"
  | "NU_CNPJ_MANTENEDORA_ASC"
  | "NU_CNPJ_MANTENEDORA_DESC"
  | "TP_PFPJ_ASC"
  | "TP_PFPJ_DESC"
  | "NIVEL_DEP_ASC"
  | "NIVEL_DEP_DESC"
  | "NO_RAZAO_SOCIAL_ASC"
  | "NO_RAZAO_SOCIAL_DESC"
  | "NO_FANTASIA_ASC"
  | "NO_FANTASIA_DESC"
  | "NO_LOGRADOURO_ASC"
  | "NO_LOGRADOURO_DESC"
  | "NU_ENDERECO_ASC"
  | "NU_ENDERECO_DESC"
  | "NO_COMPLEMENTO_ASC"
  | "NO_COMPLEMENTO_DESC"
  | "NO_BAIRRO_ASC"
  | "NO_BAIRRO_DESC"
  | "CO_CEP_ASC"
  | "CO_CEP_DESC"
  | "CO_REGIAO_SAUDE_ASC"
  | "CO_REGIAO_SAUDE_DESC"
  | "CO_MICRO_REGIAO_ASC"
  | "CO_MICRO_REGIAO_DESC"
  | "CO_DISTRITO_SANITARIO_ASC"
  | "CO_DISTRITO_SANITARIO_DESC"
  | "CO_DISTRITO_ADMINISTRATIVO_ASC"
  | "CO_DISTRITO_ADMINISTRATIVO_DESC"
  | "NU_TELEFONE_ASC"
  | "NU_TELEFONE_DESC"
  | "NU_FAX_ASC"
  | "NU_FAX_DESC"
  | "NO_EMAIL_ASC"
  | "NO_EMAIL_DESC"
  | "NU_CPF_ASC"
  | "NU_CPF_DESC"
  | "NU_CNPJ_ASC"
  | "NU_CNPJ_DESC"
  | "CO_ATIVIDADE_ASC"
  | "CO_ATIVIDADE_DESC"
  | "CO_CLIENTELA_ASC"
  | "CO_CLIENTELA_DESC"
  | "NU_ALVARA_ASC"
  | "NU_ALVARA_DESC"
  | "DT_EXPEDICAO_ASC"
  | "DT_EXPEDICAO_DESC"
  | "TP_ORGAO_EXPEDIDOR_ASC"
  | "TP_ORGAO_EXPEDIDOR_DESC"
  | "DT_VAL_LIC_SANI_ASC"
  | "DT_VAL_LIC_SANI_DESC"
  | "TP_LIC_SANI_ASC"
  | "TP_LIC_SANI_DESC"
  | "TP_UNIDADE_ASC"
  | "TP_UNIDADE_DESC"
  | "CO_TURNO_ATENDIMENTO_ASC"
  | "CO_TURNO_ATENDIMENTO_DESC"
  | "CO_ESTADO_GESTOR_ASC"
  | "CO_ESTADO_GESTOR_DESC"
  | "CO_MUNICIPIO_GESTOR_ASC"
  | "CO_MUNICIPIO_GESTOR_DESC"
  | "DT_ATUALIZACAO_ASC"
  | "DT_ATUALIZACAO_DESC"
  | "CO_USUARIO_ASC"
  | "CO_USUARIO_DESC"
  | "CO_CPFDIRETORCLN_ASC"
  | "CO_CPFDIRETORCLN_DESC"
  | "REG_DIRETORCLN_ASC"
  | "REG_DIRETORCLN_DESC"
  | "ST_ADESAO_FILANTROP_ASC"
  | "ST_ADESAO_FILANTROP_DESC"
  | "CO_MOTIVO_DESAB_ASC"
  | "CO_MOTIVO_DESAB_DESC"
  | "NO_URL_ASC"
  | "NO_URL_DESC"
  | "NU_LATITUDE_ASC"
  | "NU_LATITUDE_DESC"
  | "NU_LONGITUDE_ASC"
  | "NU_LONGITUDE_DESC"
  | "DT_ATU_GEO_ASC"
  | "DT_ATU_GEO_DESC"
  | "NO_USUARIO_GEO_ASC"
  | "NO_USUARIO_GEO_DESC"
  | "CO_NATUREZA_JUR_ASC"
  | "CO_NATUREZA_JUR_DESC"
  | "TP_ESTAB_SEMPRE_ABERTO_ASC"
  | "TP_ESTAB_SEMPRE_ABERTO_DESC"
  | "ST_GERACREDITO_GERENTE_SGIF_ASC"
  | "ST_GERACREDITO_GERENTE_SGIF_DESC"
  | "ST_CONEXAO_INTERNET_ASC"
  | "ST_CONEXAO_INTERNET_DESC"
  | "CO_TIPO_UNIDADE_ASC"
  | "CO_TIPO_UNIDADE_DESC"
  | "NO_FANTASIA_ABREV_ASC"
  | "NO_FANTASIA_ABREV_DESC"
  | "TP_GESTAO_ASC"
  | "TP_GESTAO_DESC"
  | "DT_ATUALIZACAO_ORIGEM_ASC"
  | "DT_ATUALIZACAO_ORIGEM_DESC"
  | "CO_TIPO_ESTABELECIMENTO_ASC"
  | "CO_TIPO_ESTABELECIMENTO_DESC"
  | "CO_ATIVIDADE_PRINCIPAL_ASC"
  | "CO_ATIVIDADE_PRINCIPAL_DESC"
  | "ST_CONTRATO_FORMALIZADO_ASC"
  | "ST_CONTRATO_FORMALIZADO_DESC";

export type MutationType = "CREATED" | "UPDATED" | "DELETED";

export interface EstabelecimentoCreateInput {
  _id?: ID_Input;
  CO_UNIDADE: Float;
  CO_CNES?: String;
  NU_CNPJ_MANTENEDORA?: String;
  TP_PFPJ?: String;
  NIVEL_DEP?: String;
  NO_RAZAO_SOCIAL?: String;
  NO_FANTASIA?: String;
  NO_LOGRADOURO?: String;
  NU_ENDERECO?: String;
  NO_COMPLEMENTO?: String;
  NO_BAIRRO?: String;
  CO_CEP?: String;
  CO_REGIAO_SAUDE?: String;
  CO_MICRO_REGIAO?: String;
  CO_DISTRITO_SANITARIO?: String;
  CO_DISTRITO_ADMINISTRATIVO?: String;
  NU_TELEFONE?: String;
  NU_FAX?: String;
  NO_EMAIL?: String;
  NU_CPF?: String;
  NU_CNPJ?: String;
  CO_ATIVIDADE?: String;
  CO_CLIENTELA?: String;
  NU_ALVARA?: String;
  DT_EXPEDICAO?: String;
  TP_ORGAO_EXPEDIDOR?: String;
  DT_VAL_LIC_SANI?: String;
  TP_LIC_SANI?: String;
  TP_UNIDADE?: String;
  CO_TURNO_ATENDIMENTO?: String;
  CO_ESTADO_GESTOR?: String;
  CO_MUNICIPIO_GESTOR?: String;
  DT_ATUALIZACAO?: String;
  CO_USUARIO?: String;
  CO_CPFDIRETORCLN?: String;
  REG_DIRETORCLN?: String;
  ST_ADESAO_FILANTROP?: String;
  CO_MOTIVO_DESAB?: String;
  NO_URL?: String;
  NU_LATITUDE?: String;
  NU_LONGITUDE?: String;
  DT_ATU_GEO?: String;
  NO_USUARIO_GEO?: String;
  CO_NATUREZA_JUR?: String;
  TP_ESTAB_SEMPRE_ABERTO?: String;
  ST_GERACREDITO_GERENTE_SGIF?: String;
  ST_CONEXAO_INTERNET?: String;
  CO_TIPO_UNIDADE?: String;
  NO_FANTASIA_ABREV?: String;
  TP_GESTAO?: String;
  DT_ATUALIZACAO_ORIGEM?: String;
  CO_TIPO_ESTABELECIMENTO?: String;
  CO_ATIVIDADE_PRINCIPAL?: String;
  ST_CONTRATO_FORMALIZADO?: String;
}

export interface EstabelecimentoUpdateInput {
  CO_UNIDADE?: Float;
  CO_CNES?: String;
  NU_CNPJ_MANTENEDORA?: String;
  TP_PFPJ?: String;
  NIVEL_DEP?: String;
  NO_RAZAO_SOCIAL?: String;
  NO_FANTASIA?: String;
  NO_LOGRADOURO?: String;
  NU_ENDERECO?: String;
  NO_COMPLEMENTO?: String;
  NO_BAIRRO?: String;
  CO_CEP?: String;
  CO_REGIAO_SAUDE?: String;
  CO_MICRO_REGIAO?: String;
  CO_DISTRITO_SANITARIO?: String;
  CO_DISTRITO_ADMINISTRATIVO?: String;
  NU_TELEFONE?: String;
  NU_FAX?: String;
  NO_EMAIL?: String;
  NU_CPF?: String;
  NU_CNPJ?: String;
  CO_ATIVIDADE?: String;
  CO_CLIENTELA?: String;
  NU_ALVARA?: String;
  DT_EXPEDICAO?: String;
  TP_ORGAO_EXPEDIDOR?: String;
  DT_VAL_LIC_SANI?: String;
  TP_LIC_SANI?: String;
  TP_UNIDADE?: String;
  CO_TURNO_ATENDIMENTO?: String;
  CO_ESTADO_GESTOR?: String;
  CO_MUNICIPIO_GESTOR?: String;
  DT_ATUALIZACAO?: String;
  CO_USUARIO?: String;
  CO_CPFDIRETORCLN?: String;
  REG_DIRETORCLN?: String;
  ST_ADESAO_FILANTROP?: String;
  CO_MOTIVO_DESAB?: String;
  NO_URL?: String;
  NU_LATITUDE?: String;
  NU_LONGITUDE?: String;
  DT_ATU_GEO?: String;
  NO_USUARIO_GEO?: String;
  CO_NATUREZA_JUR?: String;
  TP_ESTAB_SEMPRE_ABERTO?: String;
  ST_GERACREDITO_GERENTE_SGIF?: String;
  ST_CONEXAO_INTERNET?: String;
  CO_TIPO_UNIDADE?: String;
  NO_FANTASIA_ABREV?: String;
  TP_GESTAO?: String;
  DT_ATUALIZACAO_ORIGEM?: String;
  CO_TIPO_ESTABELECIMENTO?: String;
  CO_ATIVIDADE_PRINCIPAL?: String;
  ST_CONTRATO_FORMALIZADO?: String;
}

export interface EstabelecimentoWhereInput {
  _id?: ID_Input;
  _id_not?: ID_Input;
  _id_in?: ID_Input[] | ID_Input;
  _id_not_in?: ID_Input[] | ID_Input;
  _id_lt?: ID_Input;
  _id_lte?: ID_Input;
  _id_gt?: ID_Input;
  _id_gte?: ID_Input;
  _id_contains?: ID_Input;
  _id_not_contains?: ID_Input;
  _id_starts_with?: ID_Input;
  _id_not_starts_with?: ID_Input;
  _id_ends_with?: ID_Input;
  _id_not_ends_with?: ID_Input;
  CO_UNIDADE?: Float;
  CO_UNIDADE_not?: Float;
  CO_UNIDADE_in?: Float[] | Float;
  CO_UNIDADE_not_in?: Float[] | Float;
  CO_UNIDADE_lt?: Float;
  CO_UNIDADE_lte?: Float;
  CO_UNIDADE_gt?: Float;
  CO_UNIDADE_gte?: Float;
  CO_CNES?: String;
  CO_CNES_not?: String;
  CO_CNES_in?: String[] | String;
  CO_CNES_not_in?: String[] | String;
  CO_CNES_lt?: String;
  CO_CNES_lte?: String;
  CO_CNES_gt?: String;
  CO_CNES_gte?: String;
  CO_CNES_contains?: String;
  CO_CNES_not_contains?: String;
  CO_CNES_starts_with?: String;
  CO_CNES_not_starts_with?: String;
  CO_CNES_ends_with?: String;
  CO_CNES_not_ends_with?: String;
  NU_CNPJ_MANTENEDORA?: String;
  NU_CNPJ_MANTENEDORA_not?: String;
  NU_CNPJ_MANTENEDORA_in?: String[] | String;
  NU_CNPJ_MANTENEDORA_not_in?: String[] | String;
  NU_CNPJ_MANTENEDORA_lt?: String;
  NU_CNPJ_MANTENEDORA_lte?: String;
  NU_CNPJ_MANTENEDORA_gt?: String;
  NU_CNPJ_MANTENEDORA_gte?: String;
  NU_CNPJ_MANTENEDORA_contains?: String;
  NU_CNPJ_MANTENEDORA_not_contains?: String;
  NU_CNPJ_MANTENEDORA_starts_with?: String;
  NU_CNPJ_MANTENEDORA_not_starts_with?: String;
  NU_CNPJ_MANTENEDORA_ends_with?: String;
  NU_CNPJ_MANTENEDORA_not_ends_with?: String;
  TP_PFPJ?: String;
  TP_PFPJ_not?: String;
  TP_PFPJ_in?: String[] | String;
  TP_PFPJ_not_in?: String[] | String;
  TP_PFPJ_lt?: String;
  TP_PFPJ_lte?: String;
  TP_PFPJ_gt?: String;
  TP_PFPJ_gte?: String;
  TP_PFPJ_contains?: String;
  TP_PFPJ_not_contains?: String;
  TP_PFPJ_starts_with?: String;
  TP_PFPJ_not_starts_with?: String;
  TP_PFPJ_ends_with?: String;
  TP_PFPJ_not_ends_with?: String;
  NIVEL_DEP?: String;
  NIVEL_DEP_not?: String;
  NIVEL_DEP_in?: String[] | String;
  NIVEL_DEP_not_in?: String[] | String;
  NIVEL_DEP_lt?: String;
  NIVEL_DEP_lte?: String;
  NIVEL_DEP_gt?: String;
  NIVEL_DEP_gte?: String;
  NIVEL_DEP_contains?: String;
  NIVEL_DEP_not_contains?: String;
  NIVEL_DEP_starts_with?: String;
  NIVEL_DEP_not_starts_with?: String;
  NIVEL_DEP_ends_with?: String;
  NIVEL_DEP_not_ends_with?: String;
  NO_RAZAO_SOCIAL?: String;
  NO_RAZAO_SOCIAL_not?: String;
  NO_RAZAO_SOCIAL_in?: String[] | String;
  NO_RAZAO_SOCIAL_not_in?: String[] | String;
  NO_RAZAO_SOCIAL_lt?: String;
  NO_RAZAO_SOCIAL_lte?: String;
  NO_RAZAO_SOCIAL_gt?: String;
  NO_RAZAO_SOCIAL_gte?: String;
  NO_RAZAO_SOCIAL_contains?: String;
  NO_RAZAO_SOCIAL_not_contains?: String;
  NO_RAZAO_SOCIAL_starts_with?: String;
  NO_RAZAO_SOCIAL_not_starts_with?: String;
  NO_RAZAO_SOCIAL_ends_with?: String;
  NO_RAZAO_SOCIAL_not_ends_with?: String;
  NO_FANTASIA?: String;
  NO_FANTASIA_not?: String;
  NO_FANTASIA_in?: String[] | String;
  NO_FANTASIA_not_in?: String[] | String;
  NO_FANTASIA_lt?: String;
  NO_FANTASIA_lte?: String;
  NO_FANTASIA_gt?: String;
  NO_FANTASIA_gte?: String;
  NO_FANTASIA_contains?: String;
  NO_FANTASIA_not_contains?: String;
  NO_FANTASIA_starts_with?: String;
  NO_FANTASIA_not_starts_with?: String;
  NO_FANTASIA_ends_with?: String;
  NO_FANTASIA_not_ends_with?: String;
  NO_LOGRADOURO?: String;
  NO_LOGRADOURO_not?: String;
  NO_LOGRADOURO_in?: String[] | String;
  NO_LOGRADOURO_not_in?: String[] | String;
  NO_LOGRADOURO_lt?: String;
  NO_LOGRADOURO_lte?: String;
  NO_LOGRADOURO_gt?: String;
  NO_LOGRADOURO_gte?: String;
  NO_LOGRADOURO_contains?: String;
  NO_LOGRADOURO_not_contains?: String;
  NO_LOGRADOURO_starts_with?: String;
  NO_LOGRADOURO_not_starts_with?: String;
  NO_LOGRADOURO_ends_with?: String;
  NO_LOGRADOURO_not_ends_with?: String;
  NU_ENDERECO?: String;
  NU_ENDERECO_not?: String;
  NU_ENDERECO_in?: String[] | String;
  NU_ENDERECO_not_in?: String[] | String;
  NU_ENDERECO_lt?: String;
  NU_ENDERECO_lte?: String;
  NU_ENDERECO_gt?: String;
  NU_ENDERECO_gte?: String;
  NU_ENDERECO_contains?: String;
  NU_ENDERECO_not_contains?: String;
  NU_ENDERECO_starts_with?: String;
  NU_ENDERECO_not_starts_with?: String;
  NU_ENDERECO_ends_with?: String;
  NU_ENDERECO_not_ends_with?: String;
  NO_COMPLEMENTO?: String;
  NO_COMPLEMENTO_not?: String;
  NO_COMPLEMENTO_in?: String[] | String;
  NO_COMPLEMENTO_not_in?: String[] | String;
  NO_COMPLEMENTO_lt?: String;
  NO_COMPLEMENTO_lte?: String;
  NO_COMPLEMENTO_gt?: String;
  NO_COMPLEMENTO_gte?: String;
  NO_COMPLEMENTO_contains?: String;
  NO_COMPLEMENTO_not_contains?: String;
  NO_COMPLEMENTO_starts_with?: String;
  NO_COMPLEMENTO_not_starts_with?: String;
  NO_COMPLEMENTO_ends_with?: String;
  NO_COMPLEMENTO_not_ends_with?: String;
  NO_BAIRRO?: String;
  NO_BAIRRO_not?: String;
  NO_BAIRRO_in?: String[] | String;
  NO_BAIRRO_not_in?: String[] | String;
  NO_BAIRRO_lt?: String;
  NO_BAIRRO_lte?: String;
  NO_BAIRRO_gt?: String;
  NO_BAIRRO_gte?: String;
  NO_BAIRRO_contains?: String;
  NO_BAIRRO_not_contains?: String;
  NO_BAIRRO_starts_with?: String;
  NO_BAIRRO_not_starts_with?: String;
  NO_BAIRRO_ends_with?: String;
  NO_BAIRRO_not_ends_with?: String;
  CO_CEP?: String;
  CO_CEP_not?: String;
  CO_CEP_in?: String[] | String;
  CO_CEP_not_in?: String[] | String;
  CO_CEP_lt?: String;
  CO_CEP_lte?: String;
  CO_CEP_gt?: String;
  CO_CEP_gte?: String;
  CO_CEP_contains?: String;
  CO_CEP_not_contains?: String;
  CO_CEP_starts_with?: String;
  CO_CEP_not_starts_with?: String;
  CO_CEP_ends_with?: String;
  CO_CEP_not_ends_with?: String;
  CO_REGIAO_SAUDE?: String;
  CO_REGIAO_SAUDE_not?: String;
  CO_REGIAO_SAUDE_in?: String[] | String;
  CO_REGIAO_SAUDE_not_in?: String[] | String;
  CO_REGIAO_SAUDE_lt?: String;
  CO_REGIAO_SAUDE_lte?: String;
  CO_REGIAO_SAUDE_gt?: String;
  CO_REGIAO_SAUDE_gte?: String;
  CO_REGIAO_SAUDE_contains?: String;
  CO_REGIAO_SAUDE_not_contains?: String;
  CO_REGIAO_SAUDE_starts_with?: String;
  CO_REGIAO_SAUDE_not_starts_with?: String;
  CO_REGIAO_SAUDE_ends_with?: String;
  CO_REGIAO_SAUDE_not_ends_with?: String;
  CO_MICRO_REGIAO?: String;
  CO_MICRO_REGIAO_not?: String;
  CO_MICRO_REGIAO_in?: String[] | String;
  CO_MICRO_REGIAO_not_in?: String[] | String;
  CO_MICRO_REGIAO_lt?: String;
  CO_MICRO_REGIAO_lte?: String;
  CO_MICRO_REGIAO_gt?: String;
  CO_MICRO_REGIAO_gte?: String;
  CO_MICRO_REGIAO_contains?: String;
  CO_MICRO_REGIAO_not_contains?: String;
  CO_MICRO_REGIAO_starts_with?: String;
  CO_MICRO_REGIAO_not_starts_with?: String;
  CO_MICRO_REGIAO_ends_with?: String;
  CO_MICRO_REGIAO_not_ends_with?: String;
  CO_DISTRITO_SANITARIO?: String;
  CO_DISTRITO_SANITARIO_not?: String;
  CO_DISTRITO_SANITARIO_in?: String[] | String;
  CO_DISTRITO_SANITARIO_not_in?: String[] | String;
  CO_DISTRITO_SANITARIO_lt?: String;
  CO_DISTRITO_SANITARIO_lte?: String;
  CO_DISTRITO_SANITARIO_gt?: String;
  CO_DISTRITO_SANITARIO_gte?: String;
  CO_DISTRITO_SANITARIO_contains?: String;
  CO_DISTRITO_SANITARIO_not_contains?: String;
  CO_DISTRITO_SANITARIO_starts_with?: String;
  CO_DISTRITO_SANITARIO_not_starts_with?: String;
  CO_DISTRITO_SANITARIO_ends_with?: String;
  CO_DISTRITO_SANITARIO_not_ends_with?: String;
  CO_DISTRITO_ADMINISTRATIVO?: String;
  CO_DISTRITO_ADMINISTRATIVO_not?: String;
  CO_DISTRITO_ADMINISTRATIVO_in?: String[] | String;
  CO_DISTRITO_ADMINISTRATIVO_not_in?: String[] | String;
  CO_DISTRITO_ADMINISTRATIVO_lt?: String;
  CO_DISTRITO_ADMINISTRATIVO_lte?: String;
  CO_DISTRITO_ADMINISTRATIVO_gt?: String;
  CO_DISTRITO_ADMINISTRATIVO_gte?: String;
  CO_DISTRITO_ADMINISTRATIVO_contains?: String;
  CO_DISTRITO_ADMINISTRATIVO_not_contains?: String;
  CO_DISTRITO_ADMINISTRATIVO_starts_with?: String;
  CO_DISTRITO_ADMINISTRATIVO_not_starts_with?: String;
  CO_DISTRITO_ADMINISTRATIVO_ends_with?: String;
  CO_DISTRITO_ADMINISTRATIVO_not_ends_with?: String;
  NU_TELEFONE?: String;
  NU_TELEFONE_not?: String;
  NU_TELEFONE_in?: String[] | String;
  NU_TELEFONE_not_in?: String[] | String;
  NU_TELEFONE_lt?: String;
  NU_TELEFONE_lte?: String;
  NU_TELEFONE_gt?: String;
  NU_TELEFONE_gte?: String;
  NU_TELEFONE_contains?: String;
  NU_TELEFONE_not_contains?: String;
  NU_TELEFONE_starts_with?: String;
  NU_TELEFONE_not_starts_with?: String;
  NU_TELEFONE_ends_with?: String;
  NU_TELEFONE_not_ends_with?: String;
  NU_FAX?: String;
  NU_FAX_not?: String;
  NU_FAX_in?: String[] | String;
  NU_FAX_not_in?: String[] | String;
  NU_FAX_lt?: String;
  NU_FAX_lte?: String;
  NU_FAX_gt?: String;
  NU_FAX_gte?: String;
  NU_FAX_contains?: String;
  NU_FAX_not_contains?: String;
  NU_FAX_starts_with?: String;
  NU_FAX_not_starts_with?: String;
  NU_FAX_ends_with?: String;
  NU_FAX_not_ends_with?: String;
  NO_EMAIL?: String;
  NO_EMAIL_not?: String;
  NO_EMAIL_in?: String[] | String;
  NO_EMAIL_not_in?: String[] | String;
  NO_EMAIL_lt?: String;
  NO_EMAIL_lte?: String;
  NO_EMAIL_gt?: String;
  NO_EMAIL_gte?: String;
  NO_EMAIL_contains?: String;
  NO_EMAIL_not_contains?: String;
  NO_EMAIL_starts_with?: String;
  NO_EMAIL_not_starts_with?: String;
  NO_EMAIL_ends_with?: String;
  NO_EMAIL_not_ends_with?: String;
  NU_CPF?: String;
  NU_CPF_not?: String;
  NU_CPF_in?: String[] | String;
  NU_CPF_not_in?: String[] | String;
  NU_CPF_lt?: String;
  NU_CPF_lte?: String;
  NU_CPF_gt?: String;
  NU_CPF_gte?: String;
  NU_CPF_contains?: String;
  NU_CPF_not_contains?: String;
  NU_CPF_starts_with?: String;
  NU_CPF_not_starts_with?: String;
  NU_CPF_ends_with?: String;
  NU_CPF_not_ends_with?: String;
  NU_CNPJ?: String;
  NU_CNPJ_not?: String;
  NU_CNPJ_in?: String[] | String;
  NU_CNPJ_not_in?: String[] | String;
  NU_CNPJ_lt?: String;
  NU_CNPJ_lte?: String;
  NU_CNPJ_gt?: String;
  NU_CNPJ_gte?: String;
  NU_CNPJ_contains?: String;
  NU_CNPJ_not_contains?: String;
  NU_CNPJ_starts_with?: String;
  NU_CNPJ_not_starts_with?: String;
  NU_CNPJ_ends_with?: String;
  NU_CNPJ_not_ends_with?: String;
  CO_ATIVIDADE?: String;
  CO_ATIVIDADE_not?: String;
  CO_ATIVIDADE_in?: String[] | String;
  CO_ATIVIDADE_not_in?: String[] | String;
  CO_ATIVIDADE_lt?: String;
  CO_ATIVIDADE_lte?: String;
  CO_ATIVIDADE_gt?: String;
  CO_ATIVIDADE_gte?: String;
  CO_ATIVIDADE_contains?: String;
  CO_ATIVIDADE_not_contains?: String;
  CO_ATIVIDADE_starts_with?: String;
  CO_ATIVIDADE_not_starts_with?: String;
  CO_ATIVIDADE_ends_with?: String;
  CO_ATIVIDADE_not_ends_with?: String;
  CO_CLIENTELA?: String;
  CO_CLIENTELA_not?: String;
  CO_CLIENTELA_in?: String[] | String;
  CO_CLIENTELA_not_in?: String[] | String;
  CO_CLIENTELA_lt?: String;
  CO_CLIENTELA_lte?: String;
  CO_CLIENTELA_gt?: String;
  CO_CLIENTELA_gte?: String;
  CO_CLIENTELA_contains?: String;
  CO_CLIENTELA_not_contains?: String;
  CO_CLIENTELA_starts_with?: String;
  CO_CLIENTELA_not_starts_with?: String;
  CO_CLIENTELA_ends_with?: String;
  CO_CLIENTELA_not_ends_with?: String;
  NU_ALVARA?: String;
  NU_ALVARA_not?: String;
  NU_ALVARA_in?: String[] | String;
  NU_ALVARA_not_in?: String[] | String;
  NU_ALVARA_lt?: String;
  NU_ALVARA_lte?: String;
  NU_ALVARA_gt?: String;
  NU_ALVARA_gte?: String;
  NU_ALVARA_contains?: String;
  NU_ALVARA_not_contains?: String;
  NU_ALVARA_starts_with?: String;
  NU_ALVARA_not_starts_with?: String;
  NU_ALVARA_ends_with?: String;
  NU_ALVARA_not_ends_with?: String;
  DT_EXPEDICAO?: String;
  DT_EXPEDICAO_not?: String;
  DT_EXPEDICAO_in?: String[] | String;
  DT_EXPEDICAO_not_in?: String[] | String;
  DT_EXPEDICAO_lt?: String;
  DT_EXPEDICAO_lte?: String;
  DT_EXPEDICAO_gt?: String;
  DT_EXPEDICAO_gte?: String;
  DT_EXPEDICAO_contains?: String;
  DT_EXPEDICAO_not_contains?: String;
  DT_EXPEDICAO_starts_with?: String;
  DT_EXPEDICAO_not_starts_with?: String;
  DT_EXPEDICAO_ends_with?: String;
  DT_EXPEDICAO_not_ends_with?: String;
  TP_ORGAO_EXPEDIDOR?: String;
  TP_ORGAO_EXPEDIDOR_not?: String;
  TP_ORGAO_EXPEDIDOR_in?: String[] | String;
  TP_ORGAO_EXPEDIDOR_not_in?: String[] | String;
  TP_ORGAO_EXPEDIDOR_lt?: String;
  TP_ORGAO_EXPEDIDOR_lte?: String;
  TP_ORGAO_EXPEDIDOR_gt?: String;
  TP_ORGAO_EXPEDIDOR_gte?: String;
  TP_ORGAO_EXPEDIDOR_contains?: String;
  TP_ORGAO_EXPEDIDOR_not_contains?: String;
  TP_ORGAO_EXPEDIDOR_starts_with?: String;
  TP_ORGAO_EXPEDIDOR_not_starts_with?: String;
  TP_ORGAO_EXPEDIDOR_ends_with?: String;
  TP_ORGAO_EXPEDIDOR_not_ends_with?: String;
  DT_VAL_LIC_SANI?: String;
  DT_VAL_LIC_SANI_not?: String;
  DT_VAL_LIC_SANI_in?: String[] | String;
  DT_VAL_LIC_SANI_not_in?: String[] | String;
  DT_VAL_LIC_SANI_lt?: String;
  DT_VAL_LIC_SANI_lte?: String;
  DT_VAL_LIC_SANI_gt?: String;
  DT_VAL_LIC_SANI_gte?: String;
  DT_VAL_LIC_SANI_contains?: String;
  DT_VAL_LIC_SANI_not_contains?: String;
  DT_VAL_LIC_SANI_starts_with?: String;
  DT_VAL_LIC_SANI_not_starts_with?: String;
  DT_VAL_LIC_SANI_ends_with?: String;
  DT_VAL_LIC_SANI_not_ends_with?: String;
  TP_LIC_SANI?: String;
  TP_LIC_SANI_not?: String;
  TP_LIC_SANI_in?: String[] | String;
  TP_LIC_SANI_not_in?: String[] | String;
  TP_LIC_SANI_lt?: String;
  TP_LIC_SANI_lte?: String;
  TP_LIC_SANI_gt?: String;
  TP_LIC_SANI_gte?: String;
  TP_LIC_SANI_contains?: String;
  TP_LIC_SANI_not_contains?: String;
  TP_LIC_SANI_starts_with?: String;
  TP_LIC_SANI_not_starts_with?: String;
  TP_LIC_SANI_ends_with?: String;
  TP_LIC_SANI_not_ends_with?: String;
  TP_UNIDADE?: String;
  TP_UNIDADE_not?: String;
  TP_UNIDADE_in?: String[] | String;
  TP_UNIDADE_not_in?: String[] | String;
  TP_UNIDADE_lt?: String;
  TP_UNIDADE_lte?: String;
  TP_UNIDADE_gt?: String;
  TP_UNIDADE_gte?: String;
  TP_UNIDADE_contains?: String;
  TP_UNIDADE_not_contains?: String;
  TP_UNIDADE_starts_with?: String;
  TP_UNIDADE_not_starts_with?: String;
  TP_UNIDADE_ends_with?: String;
  TP_UNIDADE_not_ends_with?: String;
  CO_TURNO_ATENDIMENTO?: String;
  CO_TURNO_ATENDIMENTO_not?: String;
  CO_TURNO_ATENDIMENTO_in?: String[] | String;
  CO_TURNO_ATENDIMENTO_not_in?: String[] | String;
  CO_TURNO_ATENDIMENTO_lt?: String;
  CO_TURNO_ATENDIMENTO_lte?: String;
  CO_TURNO_ATENDIMENTO_gt?: String;
  CO_TURNO_ATENDIMENTO_gte?: String;
  CO_TURNO_ATENDIMENTO_contains?: String;
  CO_TURNO_ATENDIMENTO_not_contains?: String;
  CO_TURNO_ATENDIMENTO_starts_with?: String;
  CO_TURNO_ATENDIMENTO_not_starts_with?: String;
  CO_TURNO_ATENDIMENTO_ends_with?: String;
  CO_TURNO_ATENDIMENTO_not_ends_with?: String;
  CO_ESTADO_GESTOR?: String;
  CO_ESTADO_GESTOR_not?: String;
  CO_ESTADO_GESTOR_in?: String[] | String;
  CO_ESTADO_GESTOR_not_in?: String[] | String;
  CO_ESTADO_GESTOR_lt?: String;
  CO_ESTADO_GESTOR_lte?: String;
  CO_ESTADO_GESTOR_gt?: String;
  CO_ESTADO_GESTOR_gte?: String;
  CO_ESTADO_GESTOR_contains?: String;
  CO_ESTADO_GESTOR_not_contains?: String;
  CO_ESTADO_GESTOR_starts_with?: String;
  CO_ESTADO_GESTOR_not_starts_with?: String;
  CO_ESTADO_GESTOR_ends_with?: String;
  CO_ESTADO_GESTOR_not_ends_with?: String;
  CO_MUNICIPIO_GESTOR?: String;
  CO_MUNICIPIO_GESTOR_not?: String;
  CO_MUNICIPIO_GESTOR_in?: String[] | String;
  CO_MUNICIPIO_GESTOR_not_in?: String[] | String;
  CO_MUNICIPIO_GESTOR_lt?: String;
  CO_MUNICIPIO_GESTOR_lte?: String;
  CO_MUNICIPIO_GESTOR_gt?: String;
  CO_MUNICIPIO_GESTOR_gte?: String;
  CO_MUNICIPIO_GESTOR_contains?: String;
  CO_MUNICIPIO_GESTOR_not_contains?: String;
  CO_MUNICIPIO_GESTOR_starts_with?: String;
  CO_MUNICIPIO_GESTOR_not_starts_with?: String;
  CO_MUNICIPIO_GESTOR_ends_with?: String;
  CO_MUNICIPIO_GESTOR_not_ends_with?: String;
  DT_ATUALIZACAO?: String;
  DT_ATUALIZACAO_not?: String;
  DT_ATUALIZACAO_in?: String[] | String;
  DT_ATUALIZACAO_not_in?: String[] | String;
  DT_ATUALIZACAO_lt?: String;
  DT_ATUALIZACAO_lte?: String;
  DT_ATUALIZACAO_gt?: String;
  DT_ATUALIZACAO_gte?: String;
  DT_ATUALIZACAO_contains?: String;
  DT_ATUALIZACAO_not_contains?: String;
  DT_ATUALIZACAO_starts_with?: String;
  DT_ATUALIZACAO_not_starts_with?: String;
  DT_ATUALIZACAO_ends_with?: String;
  DT_ATUALIZACAO_not_ends_with?: String;
  CO_USUARIO?: String;
  CO_USUARIO_not?: String;
  CO_USUARIO_in?: String[] | String;
  CO_USUARIO_not_in?: String[] | String;
  CO_USUARIO_lt?: String;
  CO_USUARIO_lte?: String;
  CO_USUARIO_gt?: String;
  CO_USUARIO_gte?: String;
  CO_USUARIO_contains?: String;
  CO_USUARIO_not_contains?: String;
  CO_USUARIO_starts_with?: String;
  CO_USUARIO_not_starts_with?: String;
  CO_USUARIO_ends_with?: String;
  CO_USUARIO_not_ends_with?: String;
  CO_CPFDIRETORCLN?: String;
  CO_CPFDIRETORCLN_not?: String;
  CO_CPFDIRETORCLN_in?: String[] | String;
  CO_CPFDIRETORCLN_not_in?: String[] | String;
  CO_CPFDIRETORCLN_lt?: String;
  CO_CPFDIRETORCLN_lte?: String;
  CO_CPFDIRETORCLN_gt?: String;
  CO_CPFDIRETORCLN_gte?: String;
  CO_CPFDIRETORCLN_contains?: String;
  CO_CPFDIRETORCLN_not_contains?: String;
  CO_CPFDIRETORCLN_starts_with?: String;
  CO_CPFDIRETORCLN_not_starts_with?: String;
  CO_CPFDIRETORCLN_ends_with?: String;
  CO_CPFDIRETORCLN_not_ends_with?: String;
  REG_DIRETORCLN?: String;
  REG_DIRETORCLN_not?: String;
  REG_DIRETORCLN_in?: String[] | String;
  REG_DIRETORCLN_not_in?: String[] | String;
  REG_DIRETORCLN_lt?: String;
  REG_DIRETORCLN_lte?: String;
  REG_DIRETORCLN_gt?: String;
  REG_DIRETORCLN_gte?: String;
  REG_DIRETORCLN_contains?: String;
  REG_DIRETORCLN_not_contains?: String;
  REG_DIRETORCLN_starts_with?: String;
  REG_DIRETORCLN_not_starts_with?: String;
  REG_DIRETORCLN_ends_with?: String;
  REG_DIRETORCLN_not_ends_with?: String;
  ST_ADESAO_FILANTROP?: String;
  ST_ADESAO_FILANTROP_not?: String;
  ST_ADESAO_FILANTROP_in?: String[] | String;
  ST_ADESAO_FILANTROP_not_in?: String[] | String;
  ST_ADESAO_FILANTROP_lt?: String;
  ST_ADESAO_FILANTROP_lte?: String;
  ST_ADESAO_FILANTROP_gt?: String;
  ST_ADESAO_FILANTROP_gte?: String;
  ST_ADESAO_FILANTROP_contains?: String;
  ST_ADESAO_FILANTROP_not_contains?: String;
  ST_ADESAO_FILANTROP_starts_with?: String;
  ST_ADESAO_FILANTROP_not_starts_with?: String;
  ST_ADESAO_FILANTROP_ends_with?: String;
  ST_ADESAO_FILANTROP_not_ends_with?: String;
  CO_MOTIVO_DESAB?: String;
  CO_MOTIVO_DESAB_not?: String;
  CO_MOTIVO_DESAB_in?: String[] | String;
  CO_MOTIVO_DESAB_not_in?: String[] | String;
  CO_MOTIVO_DESAB_lt?: String;
  CO_MOTIVO_DESAB_lte?: String;
  CO_MOTIVO_DESAB_gt?: String;
  CO_MOTIVO_DESAB_gte?: String;
  CO_MOTIVO_DESAB_contains?: String;
  CO_MOTIVO_DESAB_not_contains?: String;
  CO_MOTIVO_DESAB_starts_with?: String;
  CO_MOTIVO_DESAB_not_starts_with?: String;
  CO_MOTIVO_DESAB_ends_with?: String;
  CO_MOTIVO_DESAB_not_ends_with?: String;
  NO_URL?: String;
  NO_URL_not?: String;
  NO_URL_in?: String[] | String;
  NO_URL_not_in?: String[] | String;
  NO_URL_lt?: String;
  NO_URL_lte?: String;
  NO_URL_gt?: String;
  NO_URL_gte?: String;
  NO_URL_contains?: String;
  NO_URL_not_contains?: String;
  NO_URL_starts_with?: String;
  NO_URL_not_starts_with?: String;
  NO_URL_ends_with?: String;
  NO_URL_not_ends_with?: String;
  NU_LATITUDE?: String;
  NU_LATITUDE_not?: String;
  NU_LATITUDE_in?: String[] | String;
  NU_LATITUDE_not_in?: String[] | String;
  NU_LATITUDE_lt?: String;
  NU_LATITUDE_lte?: String;
  NU_LATITUDE_gt?: String;
  NU_LATITUDE_gte?: String;
  NU_LATITUDE_contains?: String;
  NU_LATITUDE_not_contains?: String;
  NU_LATITUDE_starts_with?: String;
  NU_LATITUDE_not_starts_with?: String;
  NU_LATITUDE_ends_with?: String;
  NU_LATITUDE_not_ends_with?: String;
  NU_LONGITUDE?: String;
  NU_LONGITUDE_not?: String;
  NU_LONGITUDE_in?: String[] | String;
  NU_LONGITUDE_not_in?: String[] | String;
  NU_LONGITUDE_lt?: String;
  NU_LONGITUDE_lte?: String;
  NU_LONGITUDE_gt?: String;
  NU_LONGITUDE_gte?: String;
  NU_LONGITUDE_contains?: String;
  NU_LONGITUDE_not_contains?: String;
  NU_LONGITUDE_starts_with?: String;
  NU_LONGITUDE_not_starts_with?: String;
  NU_LONGITUDE_ends_with?: String;
  NU_LONGITUDE_not_ends_with?: String;
  DT_ATU_GEO?: String;
  DT_ATU_GEO_not?: String;
  DT_ATU_GEO_in?: String[] | String;
  DT_ATU_GEO_not_in?: String[] | String;
  DT_ATU_GEO_lt?: String;
  DT_ATU_GEO_lte?: String;
  DT_ATU_GEO_gt?: String;
  DT_ATU_GEO_gte?: String;
  DT_ATU_GEO_contains?: String;
  DT_ATU_GEO_not_contains?: String;
  DT_ATU_GEO_starts_with?: String;
  DT_ATU_GEO_not_starts_with?: String;
  DT_ATU_GEO_ends_with?: String;
  DT_ATU_GEO_not_ends_with?: String;
  NO_USUARIO_GEO?: String;
  NO_USUARIO_GEO_not?: String;
  NO_USUARIO_GEO_in?: String[] | String;
  NO_USUARIO_GEO_not_in?: String[] | String;
  NO_USUARIO_GEO_lt?: String;
  NO_USUARIO_GEO_lte?: String;
  NO_USUARIO_GEO_gt?: String;
  NO_USUARIO_GEO_gte?: String;
  NO_USUARIO_GEO_contains?: String;
  NO_USUARIO_GEO_not_contains?: String;
  NO_USUARIO_GEO_starts_with?: String;
  NO_USUARIO_GEO_not_starts_with?: String;
  NO_USUARIO_GEO_ends_with?: String;
  NO_USUARIO_GEO_not_ends_with?: String;
  CO_NATUREZA_JUR?: String;
  CO_NATUREZA_JUR_not?: String;
  CO_NATUREZA_JUR_in?: String[] | String;
  CO_NATUREZA_JUR_not_in?: String[] | String;
  CO_NATUREZA_JUR_lt?: String;
  CO_NATUREZA_JUR_lte?: String;
  CO_NATUREZA_JUR_gt?: String;
  CO_NATUREZA_JUR_gte?: String;
  CO_NATUREZA_JUR_contains?: String;
  CO_NATUREZA_JUR_not_contains?: String;
  CO_NATUREZA_JUR_starts_with?: String;
  CO_NATUREZA_JUR_not_starts_with?: String;
  CO_NATUREZA_JUR_ends_with?: String;
  CO_NATUREZA_JUR_not_ends_with?: String;
  TP_ESTAB_SEMPRE_ABERTO?: String;
  TP_ESTAB_SEMPRE_ABERTO_not?: String;
  TP_ESTAB_SEMPRE_ABERTO_in?: String[] | String;
  TP_ESTAB_SEMPRE_ABERTO_not_in?: String[] | String;
  TP_ESTAB_SEMPRE_ABERTO_lt?: String;
  TP_ESTAB_SEMPRE_ABERTO_lte?: String;
  TP_ESTAB_SEMPRE_ABERTO_gt?: String;
  TP_ESTAB_SEMPRE_ABERTO_gte?: String;
  TP_ESTAB_SEMPRE_ABERTO_contains?: String;
  TP_ESTAB_SEMPRE_ABERTO_not_contains?: String;
  TP_ESTAB_SEMPRE_ABERTO_starts_with?: String;
  TP_ESTAB_SEMPRE_ABERTO_not_starts_with?: String;
  TP_ESTAB_SEMPRE_ABERTO_ends_with?: String;
  TP_ESTAB_SEMPRE_ABERTO_not_ends_with?: String;
  ST_GERACREDITO_GERENTE_SGIF?: String;
  ST_GERACREDITO_GERENTE_SGIF_not?: String;
  ST_GERACREDITO_GERENTE_SGIF_in?: String[] | String;
  ST_GERACREDITO_GERENTE_SGIF_not_in?: String[] | String;
  ST_GERACREDITO_GERENTE_SGIF_lt?: String;
  ST_GERACREDITO_GERENTE_SGIF_lte?: String;
  ST_GERACREDITO_GERENTE_SGIF_gt?: String;
  ST_GERACREDITO_GERENTE_SGIF_gte?: String;
  ST_GERACREDITO_GERENTE_SGIF_contains?: String;
  ST_GERACREDITO_GERENTE_SGIF_not_contains?: String;
  ST_GERACREDITO_GERENTE_SGIF_starts_with?: String;
  ST_GERACREDITO_GERENTE_SGIF_not_starts_with?: String;
  ST_GERACREDITO_GERENTE_SGIF_ends_with?: String;
  ST_GERACREDITO_GERENTE_SGIF_not_ends_with?: String;
  ST_CONEXAO_INTERNET?: String;
  ST_CONEXAO_INTERNET_not?: String;
  ST_CONEXAO_INTERNET_in?: String[] | String;
  ST_CONEXAO_INTERNET_not_in?: String[] | String;
  ST_CONEXAO_INTERNET_lt?: String;
  ST_CONEXAO_INTERNET_lte?: String;
  ST_CONEXAO_INTERNET_gt?: String;
  ST_CONEXAO_INTERNET_gte?: String;
  ST_CONEXAO_INTERNET_contains?: String;
  ST_CONEXAO_INTERNET_not_contains?: String;
  ST_CONEXAO_INTERNET_starts_with?: String;
  ST_CONEXAO_INTERNET_not_starts_with?: String;
  ST_CONEXAO_INTERNET_ends_with?: String;
  ST_CONEXAO_INTERNET_not_ends_with?: String;
  CO_TIPO_UNIDADE?: String;
  CO_TIPO_UNIDADE_not?: String;
  CO_TIPO_UNIDADE_in?: String[] | String;
  CO_TIPO_UNIDADE_not_in?: String[] | String;
  CO_TIPO_UNIDADE_lt?: String;
  CO_TIPO_UNIDADE_lte?: String;
  CO_TIPO_UNIDADE_gt?: String;
  CO_TIPO_UNIDADE_gte?: String;
  CO_TIPO_UNIDADE_contains?: String;
  CO_TIPO_UNIDADE_not_contains?: String;
  CO_TIPO_UNIDADE_starts_with?: String;
  CO_TIPO_UNIDADE_not_starts_with?: String;
  CO_TIPO_UNIDADE_ends_with?: String;
  CO_TIPO_UNIDADE_not_ends_with?: String;
  NO_FANTASIA_ABREV?: String;
  NO_FANTASIA_ABREV_not?: String;
  NO_FANTASIA_ABREV_in?: String[] | String;
  NO_FANTASIA_ABREV_not_in?: String[] | String;
  NO_FANTASIA_ABREV_lt?: String;
  NO_FANTASIA_ABREV_lte?: String;
  NO_FANTASIA_ABREV_gt?: String;
  NO_FANTASIA_ABREV_gte?: String;
  NO_FANTASIA_ABREV_contains?: String;
  NO_FANTASIA_ABREV_not_contains?: String;
  NO_FANTASIA_ABREV_starts_with?: String;
  NO_FANTASIA_ABREV_not_starts_with?: String;
  NO_FANTASIA_ABREV_ends_with?: String;
  NO_FANTASIA_ABREV_not_ends_with?: String;
  TP_GESTAO?: String;
  TP_GESTAO_not?: String;
  TP_GESTAO_in?: String[] | String;
  TP_GESTAO_not_in?: String[] | String;
  TP_GESTAO_lt?: String;
  TP_GESTAO_lte?: String;
  TP_GESTAO_gt?: String;
  TP_GESTAO_gte?: String;
  TP_GESTAO_contains?: String;
  TP_GESTAO_not_contains?: String;
  TP_GESTAO_starts_with?: String;
  TP_GESTAO_not_starts_with?: String;
  TP_GESTAO_ends_with?: String;
  TP_GESTAO_not_ends_with?: String;
  DT_ATUALIZACAO_ORIGEM?: String;
  DT_ATUALIZACAO_ORIGEM_not?: String;
  DT_ATUALIZACAO_ORIGEM_in?: String[] | String;
  DT_ATUALIZACAO_ORIGEM_not_in?: String[] | String;
  DT_ATUALIZACAO_ORIGEM_lt?: String;
  DT_ATUALIZACAO_ORIGEM_lte?: String;
  DT_ATUALIZACAO_ORIGEM_gt?: String;
  DT_ATUALIZACAO_ORIGEM_gte?: String;
  DT_ATUALIZACAO_ORIGEM_contains?: String;
  DT_ATUALIZACAO_ORIGEM_not_contains?: String;
  DT_ATUALIZACAO_ORIGEM_starts_with?: String;
  DT_ATUALIZACAO_ORIGEM_not_starts_with?: String;
  DT_ATUALIZACAO_ORIGEM_ends_with?: String;
  DT_ATUALIZACAO_ORIGEM_not_ends_with?: String;
  CO_TIPO_ESTABELECIMENTO?: String;
  CO_TIPO_ESTABELECIMENTO_not?: String;
  CO_TIPO_ESTABELECIMENTO_in?: String[] | String;
  CO_TIPO_ESTABELECIMENTO_not_in?: String[] | String;
  CO_TIPO_ESTABELECIMENTO_lt?: String;
  CO_TIPO_ESTABELECIMENTO_lte?: String;
  CO_TIPO_ESTABELECIMENTO_gt?: String;
  CO_TIPO_ESTABELECIMENTO_gte?: String;
  CO_TIPO_ESTABELECIMENTO_contains?: String;
  CO_TIPO_ESTABELECIMENTO_not_contains?: String;
  CO_TIPO_ESTABELECIMENTO_starts_with?: String;
  CO_TIPO_ESTABELECIMENTO_not_starts_with?: String;
  CO_TIPO_ESTABELECIMENTO_ends_with?: String;
  CO_TIPO_ESTABELECIMENTO_not_ends_with?: String;
  CO_ATIVIDADE_PRINCIPAL?: String;
  CO_ATIVIDADE_PRINCIPAL_not?: String;
  CO_ATIVIDADE_PRINCIPAL_in?: String[] | String;
  CO_ATIVIDADE_PRINCIPAL_not_in?: String[] | String;
  CO_ATIVIDADE_PRINCIPAL_lt?: String;
  CO_ATIVIDADE_PRINCIPAL_lte?: String;
  CO_ATIVIDADE_PRINCIPAL_gt?: String;
  CO_ATIVIDADE_PRINCIPAL_gte?: String;
  CO_ATIVIDADE_PRINCIPAL_contains?: String;
  CO_ATIVIDADE_PRINCIPAL_not_contains?: String;
  CO_ATIVIDADE_PRINCIPAL_starts_with?: String;
  CO_ATIVIDADE_PRINCIPAL_not_starts_with?: String;
  CO_ATIVIDADE_PRINCIPAL_ends_with?: String;
  CO_ATIVIDADE_PRINCIPAL_not_ends_with?: String;
  ST_CONTRATO_FORMALIZADO?: String;
  ST_CONTRATO_FORMALIZADO_not?: String;
  ST_CONTRATO_FORMALIZADO_in?: String[] | String;
  ST_CONTRATO_FORMALIZADO_not_in?: String[] | String;
  ST_CONTRATO_FORMALIZADO_lt?: String;
  ST_CONTRATO_FORMALIZADO_lte?: String;
  ST_CONTRATO_FORMALIZADO_gt?: String;
  ST_CONTRATO_FORMALIZADO_gte?: String;
  ST_CONTRATO_FORMALIZADO_contains?: String;
  ST_CONTRATO_FORMALIZADO_not_contains?: String;
  ST_CONTRATO_FORMALIZADO_starts_with?: String;
  ST_CONTRATO_FORMALIZADO_not_starts_with?: String;
  ST_CONTRATO_FORMALIZADO_ends_with?: String;
  ST_CONTRATO_FORMALIZADO_not_ends_with?: String;
  AND?: EstabelecimentoWhereInput[] | EstabelecimentoWhereInput;
}

export interface EstabelecimentoUpdateManyMutationInput {
  CO_UNIDADE?: Float;
  CO_CNES?: String;
  NU_CNPJ_MANTENEDORA?: String;
  TP_PFPJ?: String;
  NIVEL_DEP?: String;
  NO_RAZAO_SOCIAL?: String;
  NO_FANTASIA?: String;
  NO_LOGRADOURO?: String;
  NU_ENDERECO?: String;
  NO_COMPLEMENTO?: String;
  NO_BAIRRO?: String;
  CO_CEP?: String;
  CO_REGIAO_SAUDE?: String;
  CO_MICRO_REGIAO?: String;
  CO_DISTRITO_SANITARIO?: String;
  CO_DISTRITO_ADMINISTRATIVO?: String;
  NU_TELEFONE?: String;
  NU_FAX?: String;
  NO_EMAIL?: String;
  NU_CPF?: String;
  NU_CNPJ?: String;
  CO_ATIVIDADE?: String;
  CO_CLIENTELA?: String;
  NU_ALVARA?: String;
  DT_EXPEDICAO?: String;
  TP_ORGAO_EXPEDIDOR?: String;
  DT_VAL_LIC_SANI?: String;
  TP_LIC_SANI?: String;
  TP_UNIDADE?: String;
  CO_TURNO_ATENDIMENTO?: String;
  CO_ESTADO_GESTOR?: String;
  CO_MUNICIPIO_GESTOR?: String;
  DT_ATUALIZACAO?: String;
  CO_USUARIO?: String;
  CO_CPFDIRETORCLN?: String;
  REG_DIRETORCLN?: String;
  ST_ADESAO_FILANTROP?: String;
  CO_MOTIVO_DESAB?: String;
  NO_URL?: String;
  NU_LATITUDE?: String;
  NU_LONGITUDE?: String;
  DT_ATU_GEO?: String;
  NO_USUARIO_GEO?: String;
  CO_NATUREZA_JUR?: String;
  TP_ESTAB_SEMPRE_ABERTO?: String;
  ST_GERACREDITO_GERENTE_SGIF?: String;
  ST_CONEXAO_INTERNET?: String;
  CO_TIPO_UNIDADE?: String;
  NO_FANTASIA_ABREV?: String;
  TP_GESTAO?: String;
  DT_ATUALIZACAO_ORIGEM?: String;
  CO_TIPO_ESTABELECIMENTO?: String;
  CO_ATIVIDADE_PRINCIPAL?: String;
  ST_CONTRATO_FORMALIZADO?: String;
}

export interface EstabelecimentoSubscriptionWhereInput {
  mutation_in?: MutationType[] | MutationType;
  updatedFields_contains?: String;
  updatedFields_contains_every?: String[] | String;
  updatedFields_contains_some?: String[] | String;
  node?: EstabelecimentoWhereInput;
  AND?:
    | EstabelecimentoSubscriptionWhereInput[]
    | EstabelecimentoSubscriptionWhereInput;
}

export type EstabelecimentoWhereUniqueInput = AtLeastOne<{
  _id: ID_Input;
  CO_UNIDADE?: Float;
}>;

export interface NodeNode {
  id: ID_Output;
}

export interface EstabelecimentoEdge {
  node: Estabelecimento;
  cursor: String;
}

export interface EstabelecimentoEdgePromise
  extends Promise<EstabelecimentoEdge>,
    Fragmentable {
  node: <T = EstabelecimentoPromise>() => T;
  cursor: () => Promise<String>;
}

export interface EstabelecimentoEdgeSubscription
  extends Promise<AsyncIterator<EstabelecimentoEdge>>,
    Fragmentable {
  node: <T = EstabelecimentoSubscription>() => T;
  cursor: () => Promise<AsyncIterator<String>>;
}

export interface BatchPayload {
  count: Long;
}

export interface BatchPayloadPromise
  extends Promise<BatchPayload>,
    Fragmentable {
  count: () => Promise<Long>;
}

export interface BatchPayloadSubscription
  extends Promise<AsyncIterator<BatchPayload>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Long>>;
}

export interface Estabelecimento {
  _id: ID_Output;
  CO_UNIDADE: Float;
  CO_CNES?: String;
  NU_CNPJ_MANTENEDORA?: String;
  TP_PFPJ?: String;
  NIVEL_DEP?: String;
  NO_RAZAO_SOCIAL?: String;
  NO_FANTASIA?: String;
  NO_LOGRADOURO?: String;
  NU_ENDERECO?: String;
  NO_COMPLEMENTO?: String;
  NO_BAIRRO?: String;
  CO_CEP?: String;
  CO_REGIAO_SAUDE?: String;
  CO_MICRO_REGIAO?: String;
  CO_DISTRITO_SANITARIO?: String;
  CO_DISTRITO_ADMINISTRATIVO?: String;
  NU_TELEFONE?: String;
  NU_FAX?: String;
  NO_EMAIL?: String;
  NU_CPF?: String;
  NU_CNPJ?: String;
  CO_ATIVIDADE?: String;
  CO_CLIENTELA?: String;
  NU_ALVARA?: String;
  DT_EXPEDICAO?: String;
  TP_ORGAO_EXPEDIDOR?: String;
  DT_VAL_LIC_SANI?: String;
  TP_LIC_SANI?: String;
  TP_UNIDADE?: String;
  CO_TURNO_ATENDIMENTO?: String;
  CO_ESTADO_GESTOR?: String;
  CO_MUNICIPIO_GESTOR?: String;
  DT_ATUALIZACAO?: String;
  CO_USUARIO?: String;
  CO_CPFDIRETORCLN?: String;
  REG_DIRETORCLN?: String;
  ST_ADESAO_FILANTROP?: String;
  CO_MOTIVO_DESAB?: String;
  NO_URL?: String;
  NU_LATITUDE?: String;
  NU_LONGITUDE?: String;
  DT_ATU_GEO?: String;
  NO_USUARIO_GEO?: String;
  CO_NATUREZA_JUR?: String;
  TP_ESTAB_SEMPRE_ABERTO?: String;
  ST_GERACREDITO_GERENTE_SGIF?: String;
  ST_CONEXAO_INTERNET?: String;
  CO_TIPO_UNIDADE?: String;
  NO_FANTASIA_ABREV?: String;
  TP_GESTAO?: String;
  DT_ATUALIZACAO_ORIGEM?: String;
  CO_TIPO_ESTABELECIMENTO?: String;
  CO_ATIVIDADE_PRINCIPAL?: String;
  ST_CONTRATO_FORMALIZADO?: String;
}

export interface EstabelecimentoPromise
  extends Promise<Estabelecimento>,
    Fragmentable {
  _id: () => Promise<ID_Output>;
  CO_UNIDADE: () => Promise<Float>;
  CO_CNES: () => Promise<String>;
  NU_CNPJ_MANTENEDORA: () => Promise<String>;
  TP_PFPJ: () => Promise<String>;
  NIVEL_DEP: () => Promise<String>;
  NO_RAZAO_SOCIAL: () => Promise<String>;
  NO_FANTASIA: () => Promise<String>;
  NO_LOGRADOURO: () => Promise<String>;
  NU_ENDERECO: () => Promise<String>;
  NO_COMPLEMENTO: () => Promise<String>;
  NO_BAIRRO: () => Promise<String>;
  CO_CEP: () => Promise<String>;
  CO_REGIAO_SAUDE: () => Promise<String>;
  CO_MICRO_REGIAO: () => Promise<String>;
  CO_DISTRITO_SANITARIO: () => Promise<String>;
  CO_DISTRITO_ADMINISTRATIVO: () => Promise<String>;
  NU_TELEFONE: () => Promise<String>;
  NU_FAX: () => Promise<String>;
  NO_EMAIL: () => Promise<String>;
  NU_CPF: () => Promise<String>;
  NU_CNPJ: () => Promise<String>;
  CO_ATIVIDADE: () => Promise<String>;
  CO_CLIENTELA: () => Promise<String>;
  NU_ALVARA: () => Promise<String>;
  DT_EXPEDICAO: () => Promise<String>;
  TP_ORGAO_EXPEDIDOR: () => Promise<String>;
  DT_VAL_LIC_SANI: () => Promise<String>;
  TP_LIC_SANI: () => Promise<String>;
  TP_UNIDADE: () => Promise<String>;
  CO_TURNO_ATENDIMENTO: () => Promise<String>;
  CO_ESTADO_GESTOR: () => Promise<String>;
  CO_MUNICIPIO_GESTOR: () => Promise<String>;
  DT_ATUALIZACAO: () => Promise<String>;
  CO_USUARIO: () => Promise<String>;
  CO_CPFDIRETORCLN: () => Promise<String>;
  REG_DIRETORCLN: () => Promise<String>;
  ST_ADESAO_FILANTROP: () => Promise<String>;
  CO_MOTIVO_DESAB: () => Promise<String>;
  NO_URL: () => Promise<String>;
  NU_LATITUDE: () => Promise<String>;
  NU_LONGITUDE: () => Promise<String>;
  DT_ATU_GEO: () => Promise<String>;
  NO_USUARIO_GEO: () => Promise<String>;
  CO_NATUREZA_JUR: () => Promise<String>;
  TP_ESTAB_SEMPRE_ABERTO: () => Promise<String>;
  ST_GERACREDITO_GERENTE_SGIF: () => Promise<String>;
  ST_CONEXAO_INTERNET: () => Promise<String>;
  CO_TIPO_UNIDADE: () => Promise<String>;
  NO_FANTASIA_ABREV: () => Promise<String>;
  TP_GESTAO: () => Promise<String>;
  DT_ATUALIZACAO_ORIGEM: () => Promise<String>;
  CO_TIPO_ESTABELECIMENTO: () => Promise<String>;
  CO_ATIVIDADE_PRINCIPAL: () => Promise<String>;
  ST_CONTRATO_FORMALIZADO: () => Promise<String>;
}

export interface EstabelecimentoSubscription
  extends Promise<AsyncIterator<Estabelecimento>>,
    Fragmentable {
  _id: () => Promise<AsyncIterator<ID_Output>>;
  CO_UNIDADE: () => Promise<AsyncIterator<Float>>;
  CO_CNES: () => Promise<AsyncIterator<String>>;
  NU_CNPJ_MANTENEDORA: () => Promise<AsyncIterator<String>>;
  TP_PFPJ: () => Promise<AsyncIterator<String>>;
  NIVEL_DEP: () => Promise<AsyncIterator<String>>;
  NO_RAZAO_SOCIAL: () => Promise<AsyncIterator<String>>;
  NO_FANTASIA: () => Promise<AsyncIterator<String>>;
  NO_LOGRADOURO: () => Promise<AsyncIterator<String>>;
  NU_ENDERECO: () => Promise<AsyncIterator<String>>;
  NO_COMPLEMENTO: () => Promise<AsyncIterator<String>>;
  NO_BAIRRO: () => Promise<AsyncIterator<String>>;
  CO_CEP: () => Promise<AsyncIterator<String>>;
  CO_REGIAO_SAUDE: () => Promise<AsyncIterator<String>>;
  CO_MICRO_REGIAO: () => Promise<AsyncIterator<String>>;
  CO_DISTRITO_SANITARIO: () => Promise<AsyncIterator<String>>;
  CO_DISTRITO_ADMINISTRATIVO: () => Promise<AsyncIterator<String>>;
  NU_TELEFONE: () => Promise<AsyncIterator<String>>;
  NU_FAX: () => Promise<AsyncIterator<String>>;
  NO_EMAIL: () => Promise<AsyncIterator<String>>;
  NU_CPF: () => Promise<AsyncIterator<String>>;
  NU_CNPJ: () => Promise<AsyncIterator<String>>;
  CO_ATIVIDADE: () => Promise<AsyncIterator<String>>;
  CO_CLIENTELA: () => Promise<AsyncIterator<String>>;
  NU_ALVARA: () => Promise<AsyncIterator<String>>;
  DT_EXPEDICAO: () => Promise<AsyncIterator<String>>;
  TP_ORGAO_EXPEDIDOR: () => Promise<AsyncIterator<String>>;
  DT_VAL_LIC_SANI: () => Promise<AsyncIterator<String>>;
  TP_LIC_SANI: () => Promise<AsyncIterator<String>>;
  TP_UNIDADE: () => Promise<AsyncIterator<String>>;
  CO_TURNO_ATENDIMENTO: () => Promise<AsyncIterator<String>>;
  CO_ESTADO_GESTOR: () => Promise<AsyncIterator<String>>;
  CO_MUNICIPIO_GESTOR: () => Promise<AsyncIterator<String>>;
  DT_ATUALIZACAO: () => Promise<AsyncIterator<String>>;
  CO_USUARIO: () => Promise<AsyncIterator<String>>;
  CO_CPFDIRETORCLN: () => Promise<AsyncIterator<String>>;
  REG_DIRETORCLN: () => Promise<AsyncIterator<String>>;
  ST_ADESAO_FILANTROP: () => Promise<AsyncIterator<String>>;
  CO_MOTIVO_DESAB: () => Promise<AsyncIterator<String>>;
  NO_URL: () => Promise<AsyncIterator<String>>;
  NU_LATITUDE: () => Promise<AsyncIterator<String>>;
  NU_LONGITUDE: () => Promise<AsyncIterator<String>>;
  DT_ATU_GEO: () => Promise<AsyncIterator<String>>;
  NO_USUARIO_GEO: () => Promise<AsyncIterator<String>>;
  CO_NATUREZA_JUR: () => Promise<AsyncIterator<String>>;
  TP_ESTAB_SEMPRE_ABERTO: () => Promise<AsyncIterator<String>>;
  ST_GERACREDITO_GERENTE_SGIF: () => Promise<AsyncIterator<String>>;
  ST_CONEXAO_INTERNET: () => Promise<AsyncIterator<String>>;
  CO_TIPO_UNIDADE: () => Promise<AsyncIterator<String>>;
  NO_FANTASIA_ABREV: () => Promise<AsyncIterator<String>>;
  TP_GESTAO: () => Promise<AsyncIterator<String>>;
  DT_ATUALIZACAO_ORIGEM: () => Promise<AsyncIterator<String>>;
  CO_TIPO_ESTABELECIMENTO: () => Promise<AsyncIterator<String>>;
  CO_ATIVIDADE_PRINCIPAL: () => Promise<AsyncIterator<String>>;
  ST_CONTRATO_FORMALIZADO: () => Promise<AsyncIterator<String>>;
}

export interface EstabelecimentoSubscriptionPayload {
  mutation: MutationType;
  node: Estabelecimento;
  updatedFields: String[];
  previousValues: EstabelecimentoPreviousValues;
}

export interface EstabelecimentoSubscriptionPayloadPromise
  extends Promise<EstabelecimentoSubscriptionPayload>,
    Fragmentable {
  mutation: () => Promise<MutationType>;
  node: <T = EstabelecimentoPromise>() => T;
  updatedFields: () => Promise<String[]>;
  previousValues: <T = EstabelecimentoPreviousValuesPromise>() => T;
}

export interface EstabelecimentoSubscriptionPayloadSubscription
  extends Promise<AsyncIterator<EstabelecimentoSubscriptionPayload>>,
    Fragmentable {
  mutation: () => Promise<AsyncIterator<MutationType>>;
  node: <T = EstabelecimentoSubscription>() => T;
  updatedFields: () => Promise<AsyncIterator<String[]>>;
  previousValues: <T = EstabelecimentoPreviousValuesSubscription>() => T;
}

export interface EstabelecimentoConnection {
  pageInfo: PageInfo;
  edges: EstabelecimentoEdge[];
}

export interface EstabelecimentoConnectionPromise
  extends Promise<EstabelecimentoConnection>,
    Fragmentable {
  pageInfo: <T = PageInfoPromise>() => T;
  edges: <T = FragmentableArray<EstabelecimentoEdge>>() => T;
  aggregate: <T = AggregateEstabelecimentoPromise>() => T;
}

export interface EstabelecimentoConnectionSubscription
  extends Promise<AsyncIterator<EstabelecimentoConnection>>,
    Fragmentable {
  pageInfo: <T = PageInfoSubscription>() => T;
  edges: <T = Promise<AsyncIterator<EstabelecimentoEdgeSubscription>>>() => T;
  aggregate: <T = AggregateEstabelecimentoSubscription>() => T;
}

export interface PageInfo {
  hasNextPage: Boolean;
  hasPreviousPage: Boolean;
  startCursor?: String;
  endCursor?: String;
}

export interface PageInfoPromise extends Promise<PageInfo>, Fragmentable {
  hasNextPage: () => Promise<Boolean>;
  hasPreviousPage: () => Promise<Boolean>;
  startCursor: () => Promise<String>;
  endCursor: () => Promise<String>;
}

export interface PageInfoSubscription
  extends Promise<AsyncIterator<PageInfo>>,
    Fragmentable {
  hasNextPage: () => Promise<AsyncIterator<Boolean>>;
  hasPreviousPage: () => Promise<AsyncIterator<Boolean>>;
  startCursor: () => Promise<AsyncIterator<String>>;
  endCursor: () => Promise<AsyncIterator<String>>;
}

export interface AggregateEstabelecimento {
  count: Int;
}

export interface AggregateEstabelecimentoPromise
  extends Promise<AggregateEstabelecimento>,
    Fragmentable {
  count: () => Promise<Int>;
}

export interface AggregateEstabelecimentoSubscription
  extends Promise<AsyncIterator<AggregateEstabelecimento>>,
    Fragmentable {
  count: () => Promise<AsyncIterator<Int>>;
}

export interface EstabelecimentoPreviousValues {
  _id: ID_Output;
  CO_UNIDADE: Float;
  CO_CNES?: String;
  NU_CNPJ_MANTENEDORA?: String;
  TP_PFPJ?: String;
  NIVEL_DEP?: String;
  NO_RAZAO_SOCIAL?: String;
  NO_FANTASIA?: String;
  NO_LOGRADOURO?: String;
  NU_ENDERECO?: String;
  NO_COMPLEMENTO?: String;
  NO_BAIRRO?: String;
  CO_CEP?: String;
  CO_REGIAO_SAUDE?: String;
  CO_MICRO_REGIAO?: String;
  CO_DISTRITO_SANITARIO?: String;
  CO_DISTRITO_ADMINISTRATIVO?: String;
  NU_TELEFONE?: String;
  NU_FAX?: String;
  NO_EMAIL?: String;
  NU_CPF?: String;
  NU_CNPJ?: String;
  CO_ATIVIDADE?: String;
  CO_CLIENTELA?: String;
  NU_ALVARA?: String;
  DT_EXPEDICAO?: String;
  TP_ORGAO_EXPEDIDOR?: String;
  DT_VAL_LIC_SANI?: String;
  TP_LIC_SANI?: String;
  TP_UNIDADE?: String;
  CO_TURNO_ATENDIMENTO?: String;
  CO_ESTADO_GESTOR?: String;
  CO_MUNICIPIO_GESTOR?: String;
  DT_ATUALIZACAO?: String;
  CO_USUARIO?: String;
  CO_CPFDIRETORCLN?: String;
  REG_DIRETORCLN?: String;
  ST_ADESAO_FILANTROP?: String;
  CO_MOTIVO_DESAB?: String;
  NO_URL?: String;
  NU_LATITUDE?: String;
  NU_LONGITUDE?: String;
  DT_ATU_GEO?: String;
  NO_USUARIO_GEO?: String;
  CO_NATUREZA_JUR?: String;
  TP_ESTAB_SEMPRE_ABERTO?: String;
  ST_GERACREDITO_GERENTE_SGIF?: String;
  ST_CONEXAO_INTERNET?: String;
  CO_TIPO_UNIDADE?: String;
  NO_FANTASIA_ABREV?: String;
  TP_GESTAO?: String;
  DT_ATUALIZACAO_ORIGEM?: String;
  CO_TIPO_ESTABELECIMENTO?: String;
  CO_ATIVIDADE_PRINCIPAL?: String;
  ST_CONTRATO_FORMALIZADO?: String;
}

export interface EstabelecimentoPreviousValuesPromise
  extends Promise<EstabelecimentoPreviousValues>,
    Fragmentable {
  _id: () => Promise<ID_Output>;
  CO_UNIDADE: () => Promise<Float>;
  CO_CNES: () => Promise<String>;
  NU_CNPJ_MANTENEDORA: () => Promise<String>;
  TP_PFPJ: () => Promise<String>;
  NIVEL_DEP: () => Promise<String>;
  NO_RAZAO_SOCIAL: () => Promise<String>;
  NO_FANTASIA: () => Promise<String>;
  NO_LOGRADOURO: () => Promise<String>;
  NU_ENDERECO: () => Promise<String>;
  NO_COMPLEMENTO: () => Promise<String>;
  NO_BAIRRO: () => Promise<String>;
  CO_CEP: () => Promise<String>;
  CO_REGIAO_SAUDE: () => Promise<String>;
  CO_MICRO_REGIAO: () => Promise<String>;
  CO_DISTRITO_SANITARIO: () => Promise<String>;
  CO_DISTRITO_ADMINISTRATIVO: () => Promise<String>;
  NU_TELEFONE: () => Promise<String>;
  NU_FAX: () => Promise<String>;
  NO_EMAIL: () => Promise<String>;
  NU_CPF: () => Promise<String>;
  NU_CNPJ: () => Promise<String>;
  CO_ATIVIDADE: () => Promise<String>;
  CO_CLIENTELA: () => Promise<String>;
  NU_ALVARA: () => Promise<String>;
  DT_EXPEDICAO: () => Promise<String>;
  TP_ORGAO_EXPEDIDOR: () => Promise<String>;
  DT_VAL_LIC_SANI: () => Promise<String>;
  TP_LIC_SANI: () => Promise<String>;
  TP_UNIDADE: () => Promise<String>;
  CO_TURNO_ATENDIMENTO: () => Promise<String>;
  CO_ESTADO_GESTOR: () => Promise<String>;
  CO_MUNICIPIO_GESTOR: () => Promise<String>;
  DT_ATUALIZACAO: () => Promise<String>;
  CO_USUARIO: () => Promise<String>;
  CO_CPFDIRETORCLN: () => Promise<String>;
  REG_DIRETORCLN: () => Promise<String>;
  ST_ADESAO_FILANTROP: () => Promise<String>;
  CO_MOTIVO_DESAB: () => Promise<String>;
  NO_URL: () => Promise<String>;
  NU_LATITUDE: () => Promise<String>;
  NU_LONGITUDE: () => Promise<String>;
  DT_ATU_GEO: () => Promise<String>;
  NO_USUARIO_GEO: () => Promise<String>;
  CO_NATUREZA_JUR: () => Promise<String>;
  TP_ESTAB_SEMPRE_ABERTO: () => Promise<String>;
  ST_GERACREDITO_GERENTE_SGIF: () => Promise<String>;
  ST_CONEXAO_INTERNET: () => Promise<String>;
  CO_TIPO_UNIDADE: () => Promise<String>;
  NO_FANTASIA_ABREV: () => Promise<String>;
  TP_GESTAO: () => Promise<String>;
  DT_ATUALIZACAO_ORIGEM: () => Promise<String>;
  CO_TIPO_ESTABELECIMENTO: () => Promise<String>;
  CO_ATIVIDADE_PRINCIPAL: () => Promise<String>;
  ST_CONTRATO_FORMALIZADO: () => Promise<String>;
}

export interface EstabelecimentoPreviousValuesSubscription
  extends Promise<AsyncIterator<EstabelecimentoPreviousValues>>,
    Fragmentable {
  _id: () => Promise<AsyncIterator<ID_Output>>;
  CO_UNIDADE: () => Promise<AsyncIterator<Float>>;
  CO_CNES: () => Promise<AsyncIterator<String>>;
  NU_CNPJ_MANTENEDORA: () => Promise<AsyncIterator<String>>;
  TP_PFPJ: () => Promise<AsyncIterator<String>>;
  NIVEL_DEP: () => Promise<AsyncIterator<String>>;
  NO_RAZAO_SOCIAL: () => Promise<AsyncIterator<String>>;
  NO_FANTASIA: () => Promise<AsyncIterator<String>>;
  NO_LOGRADOURO: () => Promise<AsyncIterator<String>>;
  NU_ENDERECO: () => Promise<AsyncIterator<String>>;
  NO_COMPLEMENTO: () => Promise<AsyncIterator<String>>;
  NO_BAIRRO: () => Promise<AsyncIterator<String>>;
  CO_CEP: () => Promise<AsyncIterator<String>>;
  CO_REGIAO_SAUDE: () => Promise<AsyncIterator<String>>;
  CO_MICRO_REGIAO: () => Promise<AsyncIterator<String>>;
  CO_DISTRITO_SANITARIO: () => Promise<AsyncIterator<String>>;
  CO_DISTRITO_ADMINISTRATIVO: () => Promise<AsyncIterator<String>>;
  NU_TELEFONE: () => Promise<AsyncIterator<String>>;
  NU_FAX: () => Promise<AsyncIterator<String>>;
  NO_EMAIL: () => Promise<AsyncIterator<String>>;
  NU_CPF: () => Promise<AsyncIterator<String>>;
  NU_CNPJ: () => Promise<AsyncIterator<String>>;
  CO_ATIVIDADE: () => Promise<AsyncIterator<String>>;
  CO_CLIENTELA: () => Promise<AsyncIterator<String>>;
  NU_ALVARA: () => Promise<AsyncIterator<String>>;
  DT_EXPEDICAO: () => Promise<AsyncIterator<String>>;
  TP_ORGAO_EXPEDIDOR: () => Promise<AsyncIterator<String>>;
  DT_VAL_LIC_SANI: () => Promise<AsyncIterator<String>>;
  TP_LIC_SANI: () => Promise<AsyncIterator<String>>;
  TP_UNIDADE: () => Promise<AsyncIterator<String>>;
  CO_TURNO_ATENDIMENTO: () => Promise<AsyncIterator<String>>;
  CO_ESTADO_GESTOR: () => Promise<AsyncIterator<String>>;
  CO_MUNICIPIO_GESTOR: () => Promise<AsyncIterator<String>>;
  DT_ATUALIZACAO: () => Promise<AsyncIterator<String>>;
  CO_USUARIO: () => Promise<AsyncIterator<String>>;
  CO_CPFDIRETORCLN: () => Promise<AsyncIterator<String>>;
  REG_DIRETORCLN: () => Promise<AsyncIterator<String>>;
  ST_ADESAO_FILANTROP: () => Promise<AsyncIterator<String>>;
  CO_MOTIVO_DESAB: () => Promise<AsyncIterator<String>>;
  NO_URL: () => Promise<AsyncIterator<String>>;
  NU_LATITUDE: () => Promise<AsyncIterator<String>>;
  NU_LONGITUDE: () => Promise<AsyncIterator<String>>;
  DT_ATU_GEO: () => Promise<AsyncIterator<String>>;
  NO_USUARIO_GEO: () => Promise<AsyncIterator<String>>;
  CO_NATUREZA_JUR: () => Promise<AsyncIterator<String>>;
  TP_ESTAB_SEMPRE_ABERTO: () => Promise<AsyncIterator<String>>;
  ST_GERACREDITO_GERENTE_SGIF: () => Promise<AsyncIterator<String>>;
  ST_CONEXAO_INTERNET: () => Promise<AsyncIterator<String>>;
  CO_TIPO_UNIDADE: () => Promise<AsyncIterator<String>>;
  NO_FANTASIA_ABREV: () => Promise<AsyncIterator<String>>;
  TP_GESTAO: () => Promise<AsyncIterator<String>>;
  DT_ATUALIZACAO_ORIGEM: () => Promise<AsyncIterator<String>>;
  CO_TIPO_ESTABELECIMENTO: () => Promise<AsyncIterator<String>>;
  CO_ATIVIDADE_PRINCIPAL: () => Promise<AsyncIterator<String>>;
  ST_CONTRATO_FORMALIZADO: () => Promise<AsyncIterator<String>>;
}

/*
The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
*/
export type String = string;

/*
The `Boolean` scalar type represents `true` or `false`.
*/
export type Boolean = boolean;

/*
The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
*/
export type Int = number;

/*
The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
*/
export type Float = number;

/*
The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.
*/
export type ID_Input = string | number;
export type ID_Output = string;

export type Long = string;

/**
 * Model Metadata
 */

export const models: Model[] = [
  {
    name: "Estabelecimento",
    embedded: false
  }
];

/**
 * Type Defs
 */

export const Prisma = makePrismaClientClass<ClientConstructor<Prisma>>({
  typeDefs,
  models,
  endpoint: `http://localhost:4466/paciente/estabelecimentos`
});
export const prisma = new Prisma();
